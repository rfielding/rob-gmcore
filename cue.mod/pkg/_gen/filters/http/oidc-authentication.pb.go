// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.21.5
// source: source/filters/http/proto/oidc-authentication.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ClientAuth int32

const (
	ClientAuth_NoClientCert               ClientAuth = 0
	ClientAuth_RequestClientCert          ClientAuth = 1
	ClientAuth_RequireAnyClientCert       ClientAuth = 2
	ClientAuth_VerifyClientCertIfGiven    ClientAuth = 3
	ClientAuth_RequireAndVerifyClientCert ClientAuth = 4
)

// Enum value maps for ClientAuth.
var (
	ClientAuth_name = map[int32]string{
		0: "NoClientCert",
		1: "RequestClientCert",
		2: "RequireAnyClientCert",
		3: "VerifyClientCertIfGiven",
		4: "RequireAndVerifyClientCert",
	}
	ClientAuth_value = map[string]int32{
		"NoClientCert":               0,
		"RequestClientCert":          1,
		"RequireAnyClientCert":       2,
		"VerifyClientCertIfGiven":    3,
		"RequireAndVerifyClientCert": 4,
	}
)

func (x ClientAuth) Enum() *ClientAuth {
	p := new(ClientAuth)
	*p = x
	return p
}

func (x ClientAuth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientAuth) Descriptor() protoreflect.EnumDescriptor {
	return file_source_filters_http_proto_oidc_authentication_proto_enumTypes[0].Descriptor()
}

func (ClientAuth) Type() protoreflect.EnumType {
	return &file_source_filters_http_proto_oidc_authentication_proto_enumTypes[0]
}

func (x ClientAuth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientAuth.Descriptor instead.
func (ClientAuth) EnumDescriptor() ([]byte, []int) {
	return file_source_filters_http_proto_oidc_authentication_proto_rawDescGZIP(), []int{0}
}

type AuthenticationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken        *AuthenticationConfig_TokenStorage       `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	IdToken            *AuthenticationConfig_TokenStorage       `protobuf:"bytes,2,opt,name=idToken,proto3" json:"idToken,omitempty"`
	ServiceUrl         string                                   `protobuf:"bytes,3,opt,name=serviceUrl,proto3" json:"serviceUrl,omitempty"`
	CallbackPath       string                                   `protobuf:"bytes,4,opt,name=callbackPath,proto3" json:"callbackPath,omitempty"`
	Provider           string                                   `protobuf:"bytes,5,opt,name=provider,proto3" json:"provider,omitempty"`
	ClientId           string                                   `protobuf:"bytes,6,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientSecret       string                                   `protobuf:"bytes,7,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	AdditionalScopes   []string                                 `protobuf:"bytes,8,rep,name=additionalScopes,proto3" json:"additionalScopes,omitempty"`
	TokenRefresh       *AuthenticationConfig_TokenRefreshConfig `protobuf:"bytes,9,opt,name=tokenRefresh,proto3" json:"tokenRefresh,omitempty"`
	AuthRealms         string                                   `protobuf:"bytes,10,opt,name=authRealms,proto3" json:"authRealms,omitempty"`
	AuthAdminRealms    string                                   `protobuf:"bytes,11,opt,name=authAdminRealms,proto3" json:"authAdminRealms,omitempty"`
	UseTLS             bool                                     `protobuf:"varint,12,opt,name=useTLS,proto3" json:"useTLS,omitempty"`
	CertPath           string                                   `protobuf:"bytes,13,opt,name=certPath,proto3" json:"certPath,omitempty"`
	KeyPath            string                                   `protobuf:"bytes,14,opt,name=keyPath,proto3" json:"keyPath,omitempty"`
	CaPath             string                                   `protobuf:"bytes,15,opt,name=caPath,proto3" json:"caPath,omitempty"`
	InsecureSkipVerify bool                                     `protobuf:"varint,16,opt,name=insecureSkipVerify,proto3" json:"insecureSkipVerify,omitempty"`
	ClientAuth         ClientAuth                               `protobuf:"varint,17,opt,name=clientAuth,proto3,enum=greymatter_io.gm_proxy.source.filters.http.ClientAuth" json:"clientAuth,omitempty"`
}

func (x *AuthenticationConfig) Reset() {
	*x = AuthenticationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_filters_http_proto_oidc_authentication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationConfig) ProtoMessage() {}

func (x *AuthenticationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_source_filters_http_proto_oidc_authentication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationConfig.ProtoReflect.Descriptor instead.
func (*AuthenticationConfig) Descriptor() ([]byte, []int) {
	return file_source_filters_http_proto_oidc_authentication_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticationConfig) GetAccessToken() *AuthenticationConfig_TokenStorage {
	if x != nil {
		return x.AccessToken
	}
	return nil
}

func (x *AuthenticationConfig) GetIdToken() *AuthenticationConfig_TokenStorage {
	if x != nil {
		return x.IdToken
	}
	return nil
}

func (x *AuthenticationConfig) GetServiceUrl() string {
	if x != nil {
		return x.ServiceUrl
	}
	return ""
}

func (x *AuthenticationConfig) GetCallbackPath() string {
	if x != nil {
		return x.CallbackPath
	}
	return ""
}

func (x *AuthenticationConfig) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *AuthenticationConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthenticationConfig) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *AuthenticationConfig) GetAdditionalScopes() []string {
	if x != nil {
		return x.AdditionalScopes
	}
	return nil
}

func (x *AuthenticationConfig) GetTokenRefresh() *AuthenticationConfig_TokenRefreshConfig {
	if x != nil {
		return x.TokenRefresh
	}
	return nil
}

func (x *AuthenticationConfig) GetAuthRealms() string {
	if x != nil {
		return x.AuthRealms
	}
	return ""
}

func (x *AuthenticationConfig) GetAuthAdminRealms() string {
	if x != nil {
		return x.AuthAdminRealms
	}
	return ""
}

func (x *AuthenticationConfig) GetUseTLS() bool {
	if x != nil {
		return x.UseTLS
	}
	return false
}

func (x *AuthenticationConfig) GetCertPath() string {
	if x != nil {
		return x.CertPath
	}
	return ""
}

func (x *AuthenticationConfig) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

func (x *AuthenticationConfig) GetCaPath() string {
	if x != nil {
		return x.CaPath
	}
	return ""
}

func (x *AuthenticationConfig) GetInsecureSkipVerify() bool {
	if x != nil {
		return x.InsecureSkipVerify
	}
	return false
}

func (x *AuthenticationConfig) GetClientAuth() ClientAuth {
	if x != nil {
		return x.ClientAuth
	}
	return ClientAuth_NoClientCert
}

type AuthenticationConfig_TokenStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location       LocationType   `protobuf:"varint,1,opt,name=location,proto3,enum=greymatter_io.gm_proxy.source.filters.http.LocationType" json:"location,omitempty"`
	Key            string         `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	CookieOptions  *CookieOptions `protobuf:"bytes,3,opt,name=cookieOptions,proto3" json:"cookieOptions,omitempty"`
	MetadataFilter string         `protobuf:"bytes,4,opt,name=metadataFilter,proto3" json:"metadataFilter,omitempty"`
}

func (x *AuthenticationConfig_TokenStorage) Reset() {
	*x = AuthenticationConfig_TokenStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_filters_http_proto_oidc_authentication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationConfig_TokenStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationConfig_TokenStorage) ProtoMessage() {}

func (x *AuthenticationConfig_TokenStorage) ProtoReflect() protoreflect.Message {
	mi := &file_source_filters_http_proto_oidc_authentication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationConfig_TokenStorage.ProtoReflect.Descriptor instead.
func (*AuthenticationConfig_TokenStorage) Descriptor() ([]byte, []int) {
	return file_source_filters_http_proto_oidc_authentication_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AuthenticationConfig_TokenStorage) GetLocation() LocationType {
	if x != nil {
		return x.Location
	}
	return LocationType_header
}

func (x *AuthenticationConfig_TokenStorage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AuthenticationConfig_TokenStorage) GetCookieOptions() *CookieOptions {
	if x != nil {
		return x.CookieOptions
	}
	return nil
}

func (x *AuthenticationConfig_TokenStorage) GetMetadataFilter() string {
	if x != nil {
		return x.MetadataFilter
	}
	return ""
}

type AuthenticationConfig_TokenRefreshConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled            bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Endpoint           string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Realm              string `protobuf:"bytes,3,opt,name=realm,proto3" json:"realm,omitempty"`
	UseTLS             bool   `protobuf:"varint,4,opt,name=useTLS,proto3" json:"useTLS,omitempty"`
	CertPath           string `protobuf:"bytes,5,opt,name=certPath,proto3" json:"certPath,omitempty"`
	KeyPath            string `protobuf:"bytes,6,opt,name=keyPath,proto3" json:"keyPath,omitempty"`
	CaPath             string `protobuf:"bytes,7,opt,name=caPath,proto3" json:"caPath,omitempty"`
	InsecureSkipVerify bool   `protobuf:"varint,8,opt,name=insecureSkipVerify,proto3" json:"insecureSkipVerify,omitempty"`
	TimeoutMs          int32  `protobuf:"varint,9,opt,name=timeoutMs,proto3" json:"timeoutMs,omitempty"`
}

func (x *AuthenticationConfig_TokenRefreshConfig) Reset() {
	*x = AuthenticationConfig_TokenRefreshConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_source_filters_http_proto_oidc_authentication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationConfig_TokenRefreshConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationConfig_TokenRefreshConfig) ProtoMessage() {}

func (x *AuthenticationConfig_TokenRefreshConfig) ProtoReflect() protoreflect.Message {
	mi := &file_source_filters_http_proto_oidc_authentication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationConfig_TokenRefreshConfig.ProtoReflect.Descriptor instead.
func (*AuthenticationConfig_TokenRefreshConfig) Descriptor() ([]byte, []int) {
	return file_source_filters_http_proto_oidc_authentication_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetUseTLS() bool {
	if x != nil {
		return x.UseTLS
	}
	return false
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetCertPath() string {
	if x != nil {
		return x.CertPath
	}
	return ""
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetCaPath() string {
	if x != nil {
		return x.CaPath
	}
	return ""
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetInsecureSkipVerify() bool {
	if x != nil {
		return x.InsecureSkipVerify
	}
	return false
}

func (x *AuthenticationConfig_TokenRefreshConfig) GetTimeoutMs() int32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

var File_source_filters_http_proto_oidc_authentication_proto protoreflect.FileDescriptor

var file_source_filters_http_proto_oidc_authentication_proto_rawDesc = []byte{
	0x0a, 0x33, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x69, 0x64, 0x63,
	0x2d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x67, 0x72, 0x65, 0x79, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x6f, 0x2e, 0x67, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x1a, 0x30, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x73,
	0x75, 0x72, 0x65, 0x2d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x86, 0x0b, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6f, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x6f, 0x2e, 0x67, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x67, 0x0a,
	0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6f, 0x2e, 0x67,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x69,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x12, 0x77, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x6d,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6f, 0x2e, 0x67, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x61, 0x6c, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x54, 0x4c, 0x53, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x4c, 0x53, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x12, 0x69,
	0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x56, 0x0a, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6f, 0x2e,
	0x67, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x1a, 0xff, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x6d, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x6f, 0x2e, 0x67, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x5f, 0x0a, 0x0d,
	0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x6f, 0x2e, 0x67, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d,
	0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x94, 0x02, 0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x54,
	0x4c, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x4c, 0x53,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e,
	0x0a, 0x12, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x2a, 0x8c, 0x01, 0x0a,
	0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x0c, 0x4e,
	0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41,
	0x6e, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x10, 0x02, 0x12, 0x1b,
	0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x49, 0x66, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x10, 0x04, 0x42, 0x3d, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x65, 0x79, 0x6d, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f,
	0x68, 0x74, 0x74, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_source_filters_http_proto_oidc_authentication_proto_rawDescOnce sync.Once
	file_source_filters_http_proto_oidc_authentication_proto_rawDescData = file_source_filters_http_proto_oidc_authentication_proto_rawDesc
)

func file_source_filters_http_proto_oidc_authentication_proto_rawDescGZIP() []byte {
	file_source_filters_http_proto_oidc_authentication_proto_rawDescOnce.Do(func() {
		file_source_filters_http_proto_oidc_authentication_proto_rawDescData = protoimpl.X.CompressGZIP(file_source_filters_http_proto_oidc_authentication_proto_rawDescData)
	})
	return file_source_filters_http_proto_oidc_authentication_proto_rawDescData
}

var file_source_filters_http_proto_oidc_authentication_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_source_filters_http_proto_oidc_authentication_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_source_filters_http_proto_oidc_authentication_proto_goTypes = []interface{}{
	(ClientAuth)(0),                                 // 0: greymatter_io.gm_proxy.source.filters.http.ClientAuth
	(*AuthenticationConfig)(nil),                    // 1: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig
	(*AuthenticationConfig_TokenStorage)(nil),       // 2: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.TokenStorage
	(*AuthenticationConfig_TokenRefreshConfig)(nil), // 3: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.TokenRefreshConfig
	(LocationType)(0),                               // 4: greymatter_io.gm_proxy.source.filters.http.LocationType
	(*CookieOptions)(nil),                           // 5: greymatter_io.gm_proxy.source.filters.http.CookieOptions
}
var file_source_filters_http_proto_oidc_authentication_proto_depIdxs = []int32{
	2, // 0: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.accessToken:type_name -> greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.TokenStorage
	2, // 1: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.idToken:type_name -> greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.TokenStorage
	3, // 2: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.tokenRefresh:type_name -> greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.TokenRefreshConfig
	0, // 3: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.clientAuth:type_name -> greymatter_io.gm_proxy.source.filters.http.ClientAuth
	4, // 4: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.TokenStorage.location:type_name -> greymatter_io.gm_proxy.source.filters.http.LocationType
	5, // 5: greymatter_io.gm_proxy.source.filters.http.AuthenticationConfig.TokenStorage.cookieOptions:type_name -> greymatter_io.gm_proxy.source.filters.http.CookieOptions
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_source_filters_http_proto_oidc_authentication_proto_init() }
func file_source_filters_http_proto_oidc_authentication_proto_init() {
	if File_source_filters_http_proto_oidc_authentication_proto != nil {
		return
	}
	file_source_filters_http_proto_ensure_variables_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_source_filters_http_proto_oidc_authentication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_filters_http_proto_oidc_authentication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationConfig_TokenStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_source_filters_http_proto_oidc_authentication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationConfig_TokenRefreshConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_source_filters_http_proto_oidc_authentication_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_source_filters_http_proto_oidc_authentication_proto_goTypes,
		DependencyIndexes: file_source_filters_http_proto_oidc_authentication_proto_depIdxs,
		EnumInfos:         file_source_filters_http_proto_oidc_authentication_proto_enumTypes,
		MessageInfos:      file_source_filters_http_proto_oidc_authentication_proto_msgTypes,
	}.Build()
	File_source_filters_http_proto_oidc_authentication_proto = out.File
	file_source_filters_http_proto_oidc_authentication_proto_rawDesc = nil
	file_source_filters_http_proto_oidc_authentication_proto_goTypes = nil
	file_source_filters_http_proto_oidc_authentication_proto_depIdxs = nil
}
